//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.18 at 12:27:35 PM IST 
//


package com.myapp.ws.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.joda.time.LocalDate;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="order" maxOccurs="unbounded"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="productId" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
 *                   &lt;element name="productName" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                   &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                   &lt;element name="price" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
 *                   &lt;element name="imageUrl" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *                   &lt;element name="availability" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
 *                   &lt;element name="rating" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "order"
})
@XmlRootElement(name = "orders")
public class Orders
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected List<Orders.Order> order;

    /**
     * Gets the value of the order property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the order property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOrder().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Orders.Order }
     * 
     * 
     */
    public List<Orders.Order> getOrder() {
        if (order == null) {
            order = new ArrayList<Orders.Order>();
        }
        return this.order;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Orders)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Orders that = ((Orders) object);
        {
            List<Orders.Order> lhsOrder;
            lhsOrder = (((this.order!= null)&&(!this.order.isEmpty()))?this.getOrder():null);
            List<Orders.Order> rhsOrder;
            rhsOrder = (((that.order!= null)&&(!that.order.isEmpty()))?that.getOrder():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "order", lhsOrder), LocatorUtils.property(thatLocator, "order", rhsOrder), lhsOrder, rhsOrder)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Orders.Order> theOrder;
            theOrder = (((this.order!= null)&&(!this.order.isEmpty()))?this.getOrder():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "order", theOrder), currentHashCode, theOrder);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<Orders.Order> theOrder;
            theOrder = (((this.order!= null)&&(!this.order.isEmpty()))?this.getOrder():null);
            strategy.appendField(locator, this, "order", buffer, theOrder);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="productId" type="{http://www.w3.org/2001/XMLSchema}int"/&gt;
     *         &lt;element name="productName" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *         &lt;element name="description" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *         &lt;element name="price" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
     *         &lt;element name="imageUrl" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
     *         &lt;element name="availability" type="{http://www.w3.org/2001/XMLSchema}date"/&gt;
     *         &lt;element name="rating" type="{http://www.w3.org/2001/XMLSchema}double"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "productId",
        "productName",
        "description",
        "price",
        "imageUrl",
        "availability",
        "rating"
    })
    public static class Order
        implements Equals, HashCode, ToString
    {

        protected int productId;
        @XmlElement(required = true)
        protected String productName;
        @XmlElement(required = true)
        protected String description;
        protected double price;
        @XmlElement(required = true)
        protected String imageUrl;
        @XmlElement(required = true, type = String.class)
        @XmlJavaTypeAdapter(Adapter1 .class)
        @XmlSchemaType(name = "date")
        protected LocalDate availability;
        protected double rating;

        /**
         * Gets the value of the productId property.
         * 
         */
        
        public Order() {
			// TODO Auto-generated constructor stub
		}
        
        
        
        public Order(int productId, String productName, String description, double price, String imageUrl,
				LocalDate availability, double rating) {
			this.productId = productId;
			this.productName = productName;
			this.description = description;
			this.price = price;
			this.imageUrl = imageUrl;
			this.availability = availability;
			this.rating = rating;
		}



		public int getProductId() {
            return productId;
        }

        /**
         * Sets the value of the productId property.
         * 
         */
        public void setProductId(int value) {
            this.productId = value;
        }

        /**
         * Gets the value of the productName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getProductName() {
            return productName;
        }

        /**
         * Sets the value of the productName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setProductName(String value) {
            this.productName = value;
        }

        /**
         * Gets the value of the description property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDescription() {
            return description;
        }

        /**
         * Sets the value of the description property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDescription(String value) {
            this.description = value;
        }

        /**
         * Gets the value of the price property.
         * 
         */
        public double getPrice() {
            return price;
        }

        /**
         * Sets the value of the price property.
         * 
         */
        public void setPrice(double value) {
            this.price = value;
        }

        /**
         * Gets the value of the imageUrl property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getImageUrl() {
            return imageUrl;
        }

        /**
         * Sets the value of the imageUrl property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setImageUrl(String value) {
            this.imageUrl = value;
        }

        /**
         * Gets the value of the availability property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public LocalDate getAvailability() {
            return availability;
        }

        /**
         * Sets the value of the availability property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setAvailability(LocalDate value) {
            this.availability = value;
        }

        /**
         * Gets the value of the rating property.
         * 
         */
        public double getRating() {
            return rating;
        }

        /**
         * Sets the value of the rating property.
         * 
         */
        public void setRating(double value) {
            this.rating = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Orders.Order)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Orders.Order that = ((Orders.Order) object);
            {
                int lhsProductId;
                lhsProductId = this.getProductId();
                int rhsProductId;
                rhsProductId = that.getProductId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "productId", lhsProductId), LocatorUtils.property(thatLocator, "productId", rhsProductId), lhsProductId, rhsProductId)) {
                    return false;
                }
            }
            {
                String lhsProductName;
                lhsProductName = this.getProductName();
                String rhsProductName;
                rhsProductName = that.getProductName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "productName", lhsProductName), LocatorUtils.property(thatLocator, "productName", rhsProductName), lhsProductName, rhsProductName)) {
                    return false;
                }
            }
            {
                String lhsDescription;
                lhsDescription = this.getDescription();
                String rhsDescription;
                rhsDescription = that.getDescription();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                    return false;
                }
            }
            {
                double lhsPrice;
                lhsPrice = this.getPrice();
                double rhsPrice;
                rhsPrice = that.getPrice();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "price", lhsPrice), LocatorUtils.property(thatLocator, "price", rhsPrice), lhsPrice, rhsPrice)) {
                    return false;
                }
            }
            {
                String lhsImageUrl;
                lhsImageUrl = this.getImageUrl();
                String rhsImageUrl;
                rhsImageUrl = that.getImageUrl();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "imageUrl", lhsImageUrl), LocatorUtils.property(thatLocator, "imageUrl", rhsImageUrl), lhsImageUrl, rhsImageUrl)) {
                    return false;
                }
            }
            {
                LocalDate lhsAvailability;
                lhsAvailability = this.getAvailability();
                LocalDate rhsAvailability;
                rhsAvailability = that.getAvailability();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "availability", lhsAvailability), LocatorUtils.property(thatLocator, "availability", rhsAvailability), lhsAvailability, rhsAvailability)) {
                    return false;
                }
            }
            {
                double lhsRating;
                lhsRating = this.getRating();
                double rhsRating;
                rhsRating = that.getRating();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rating", lhsRating), LocatorUtils.property(thatLocator, "rating", rhsRating), lhsRating, rhsRating)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                int theProductId;
                theProductId = this.getProductId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "productId", theProductId), currentHashCode, theProductId);
            }
            {
                String theProductName;
                theProductName = this.getProductName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "productName", theProductName), currentHashCode, theProductName);
            }
            {
                String theDescription;
                theDescription = this.getDescription();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
            }
            {
                double thePrice;
                thePrice = this.getPrice();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "price", thePrice), currentHashCode, thePrice);
            }
            {
                String theImageUrl;
                theImageUrl = this.getImageUrl();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "imageUrl", theImageUrl), currentHashCode, theImageUrl);
            }
            {
                LocalDate theAvailability;
                theAvailability = this.getAvailability();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "availability", theAvailability), currentHashCode, theAvailability);
            }
            {
                double theRating;
                theRating = this.getRating();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rating", theRating), currentHashCode, theRating);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                int theProductId;
                theProductId = this.getProductId();
                strategy.appendField(locator, this, "productId", buffer, theProductId);
            }
            {
                String theProductName;
                theProductName = this.getProductName();
                strategy.appendField(locator, this, "productName", buffer, theProductName);
            }
            {
                String theDescription;
                theDescription = this.getDescription();
                strategy.appendField(locator, this, "description", buffer, theDescription);
            }
            {
                double thePrice;
                thePrice = this.getPrice();
                strategy.appendField(locator, this, "price", buffer, thePrice);
            }
            {
                String theImageUrl;
                theImageUrl = this.getImageUrl();
                strategy.appendField(locator, this, "imageUrl", buffer, theImageUrl);
            }
            {
                LocalDate theAvailability;
                theAvailability = this.getAvailability();
                strategy.appendField(locator, this, "availability", buffer, theAvailability);
            }
            {
                double theRating;
                theRating = this.getRating();
                strategy.appendField(locator, this, "rating", buffer, theRating);
            }
            return buffer;
        }

    }

}
